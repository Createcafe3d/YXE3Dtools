/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Wed Jan 28 10:46:55 2015. */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _DripRecorded {
    uint32_t drips;
} DripRecorded;

typedef struct _Move {
    int32_t x;
    int32_t y;
    uint32_t laserPower;
} Move;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Move_init_default                        {0, 0, 0}
#define DripRecorded_init_default                {0}
#define Move_init_zero                           {0, 0, 0}
#define DripRecorded_init_zero                   {0}

/* Field tags (for use in manual encoding/decoding) */
#define DripRecorded_drips_tag                   2
#define Move_x_tag                               1
#define Move_y_tag                               2
#define Move_laserPower_tag                      3

/* Struct field encoding specification for nanopb */
extern const pb_field_t Move_fields[4];
extern const pb_field_t DripRecorded_fields[2];

/* Maximum encoded size of messages (where known) */
#define Move_size                                28
#define DripRecorded_size                        6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
